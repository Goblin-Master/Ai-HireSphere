// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: interview.proto

package interview_client

import (
	"context"

	"Ai-HireSphere/common/call/interview"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = interview.Request
	Response = interview.Response

	Interview interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultInterview struct {
		cli zrpc.Client
	}
)

func NewInterview(cli zrpc.Client) Interview {
	return &defaultInterview{
		cli: cli,
	}
}

func (m *defaultInterview) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := interview.NewInterviewClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
