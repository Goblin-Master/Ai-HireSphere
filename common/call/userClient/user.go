// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package userClient

import (
	"context"

	"Ai-HireSphere/application/user-center/interfaces/rpc/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Id       = types.Id
	UserInfo = types.UserInfo

	User interface {
		FindUserById(ctx context.Context, in *Id, opts ...grpc.CallOption) (*UserInfo, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) FindUserById(ctx context.Context, in *Id, opts ...grpc.CallOption) (*UserInfo, error) {
	client := types.NewUserClient(m.cli.Conn())
	return client.FindUserById(ctx, in, opts...)
}
