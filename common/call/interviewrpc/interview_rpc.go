// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: interview.proto

package interviewrpc

import (
	"context"

	"Ai-HireSphere/common/call/interview"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = interview.Request
	Response = interview.Response

	InterviewRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultInterviewRpc struct {
		cli zrpc.Client
	}
)

func NewInterviewRpc(cli zrpc.Client) InterviewRpc {
	return &defaultInterviewRpc{
		cli: cli,
	}
}

func (m *defaultInterviewRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := interview.NewInterviewRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
