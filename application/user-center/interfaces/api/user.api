syntax = "v1"

// 定义服务前缀
// 定义 HTTP 服务
@server (
	group:      base
	middleware: CorsMiddleware
	prefix:     /v1/base
)
service user-api {
	@doc "发送验证码"
	@handler CaptchaSend
	post /captcha/send (CaptchaSendReq) returns (EmptyResp)

	@doc "验证验证码"
	@handler CaptchaVerify
	post /captcha/verify (CaptchaVerifyReq)
}

@server (
	group:      user
	middleware: CorsMiddleware
	prefix:     /v1/user
)
service user-api {
	@doc "注册"
	@handler Register
	post /register (RegisterReq) returns (RegisterResp)

	@doc "登录"
	@handler Login
	post /login (LoginReq) returns (LoginResp)
}

@server (
	group:      user
	prefix:     /v1/user
	middleware: CorsMiddleware
	jwt:        Auth
)
service user-api {
	@doc "获取用户信息"
	@handler UserInfo
	get /data returns (UserInfo)
}

type (
	EmptyResp  {}
	RegisterReq {
		Method string `json:"method"` // 登录方式 email或者phone
		Data   string `json:"data"` // 登录账号 手机号或者邮箱
		Code   string `json:"code"` // 验证码 6位数字
	}
	RegisterResp {
		Token string `json:"token"` // token
	}
	LoginReq {
		Method string `json:"method"` // 登录方式 email或者phone
		Data   string `json:"data"` // 登录账号 手机号或者邮箱
		Code   string `json:"code"` // 验证码 6位数字
	}
	LoginResp {
		Token string `json:"token"` // token
	}
	CaptchaSendReq {
		Way    string `json:"way"` // 验证码用途 register，login
		Target string `json:"target"` // 手机号或者邮箱
		Method string `json:"method"` // 验证码发送方式 phone, email
	}
	CaptchaVerifyReq {
		Way    string `json:"way"` // 验证码用途 register，login
		Method string `json:"method"` // 验证码发送方式 phone, email
		Target string `json:"target"` // 手机号或者邮箱
		Code   string `json:"code"` // 验证码 6位数字
	}
	UserInfo {
		id       int64  `json:"id"` // 用户id
		username string `json:"username"` // 用户名
		avatar   string `json:"avatar"` // 用户头像地址
		role     string `json:"role"` // 用户角色 admin，user
		phone    string `json:"phone"` // 用户手机号
		email    string `json:"email"` // 用户邮箱
		sex      int    `json:"sex"` // 用户性别 0未知，1男，2女
	}
)

