syntax = "v1"

// 定义服务前缀
// 定义 HTTP 服务
@server (
	group:      resume
	prefix:     /v1/resume
	middleware: CorsMiddleware
	jwt:        Auth
)
service interview-api {
	@doc "上传简历"
	@handler UploadResumeHandler
	post /upload (UploadReusmeReq) returns (UploadResumeResp)

	@doc "获取简历"
	@handler GetResumeListHandler
	get /list (GetResumeListReq) returns (GetResumeListResp)

	@doc "删除简历"
	@handler DeleteResumeHandler
	delete /delete/:id (DeleteResumeReq)

	@doc "新建简历文件夹"
	@handler CreateResumeFolderHandler
	post /folder (CreqteResumeFolderReq)

	@doc "删除简历文件夹"
	@handler DeleteResumeFolderHandler
	delete /folder/:id (DeleteResumeFolderReq)

	@doc "获取简历文件夹列表"
	@handler GetResumeFolderListHandler
	get /folder/list returns (GetResumeFolderListResp)

	@doc "更新简历文件夹"
	@handler UpdateResumeFolderHandler
	put /folder (UpdateResumeFolderReq)

	@doc "筛选简历"
	@handler CheckResumeHandler
	post /check (CheckResumeReq)
}

@server (
	group:      interview
	middleware: CorsMiddleware
	prefix:     /v1/interview
	jwt:        Auth
)
service interview-api {
	@doc "进行单次对话"
	@handler Chat
	post /chat (SSEReq)

	@doc "与智能体进行对话"
	@handler ChatAgent
	post /chat/agent (ChatAgentReq)

	@doc "生成会话 id "
	@handler ChatNew
	post /chat/new returns (ChatNewResp)

	@doc "新建一场面试"
	@handler CreateInterview
	post /new_interview (NewInterviewReq) returns (NewInterviewResp)

	@doc "查看面试准备情况"
	@handler CheckInterviewOk
	post /check_interview (CheckInterviewReq) returns (CheckInterviewResp)
}

type SSEReq {
	Data string `json:"data"`
}

type (
	ChatAgentReq {
		QuestionNum int    `json:"question_num,optional"`
		Hc          string `json:"hc,optional"`
		Level       int    `json:"level,optional"`
		Answer      string `json:"answer,optional"`
		SessionID   int64  `json:"session_id"`
	}
	ChatNewResp {
		SessionID int64 `json:"session_id"`
	}
)

type (
	CommonListReq {
		Page     int `form:"page"`
		PageSize int `form:"page_size"`
	}
	CommonListResp {
		Total int64 `json:"total"`
	}
	ResumeInfo {
		ResumeId   int64  `json:"id"`
		ResumeName string `json:"name"`
		ResumeUrl  string `json:"url"`
		FolderId   int64  `json:"folder_id"`
		UploadTime string `json:"upload_time"`
		ResumeSize int64  `json:"size"`
		UserId     int64  `json:"user_id"`
	}
	FolderInfo {
		FolderId   int64  `json:"id"`
		FolderName string `json:"name"`
	}
	UploadReusmeReq {
		FolderId int64 `form:"folder_id"` // 文件夹id
	}
	UploadResumeResp {
		Address string `json:"address"`
	}
	GetResumeListReq {
		CommonListReq
		FolderID int64 `form:"folder_id"` // 要查找的文件夹id，如果为空就是查找所有简历
	}
	GetResumeListResp {
		CommonListResp
		List []ResumeInfo `json:"list"`
	}
	DeleteResumeReq {
		ResumeId int64 `path:"id"` // 要删除的简历Id
	}
	CreqteResumeFolderReq {
		ResumeName string `json:"name"`
	}
	DeleteResumeFolderReq {
		FolderId int64 `path:"id"` // 要删除的文件夹Id
	}
	GetResumeFolderListResp {
		CommonListResp
		List []FolderInfo `json:"list"` // 简历文件夹信息
	}
	UpdateResumeFolderReq {
		FolderId   int64  `json:"folder_id"`
		FolderName string `json:"name"`
	}
	CheckResumeReq {
		Condition string   `json:"condition"`
		NeedNum   int      `json:"need_num"`
		PdfNum    int      `json:"pdf_num,optional"`
		PdfUrls   []string `json:"pdf_urls,optional"`
	}
	NewInterviewReq {
		ResumeUrl string `json:"resume_url"` // 简历链接
		Level     int    `json:"level"` // 难度等级 1简单 2一般 3中等 4较难 5困难
		Job       string `json:"job"` // 岗位名称
		Num       int    `json:"num"` // 面试题数量
	}
	NewInterviewResp {
		InterviewId int64 `json:"interview_id"`
	}
	CheckInterviewReq {
		InterviewId int64 `json:"interview_id"` // 面试Id
	}
	CheckInterviewResp {
		State int `json:"state"` // 面试准备状态 0在准备中 1准备好了 2准备失败
	}
)

